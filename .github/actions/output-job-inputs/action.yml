name: List Scheduled Jobs
description: "List the scheduled jobs created by rollout-deploy-to-prod-scheduled.yaml"

inputs:
  variables_json:
    description: 'JSON string of variables'
    required: true

runs:
  using: "composite"
  steps:
    - name: Generate Deployment Summary
      uses: actions/github-script@v6
      env:
        VARIABLES_JSON: "${{ inputs.variables_json }}"
      with:
        script: |
          const summary = core.summary;

          const inputJson = process.env.VARIABLES_JSON;
          let variables;
          try {
            variables = JSON.parse(inputJson);
          } catch (e) {
            console.error('Failed to parse input JSON:', e);
            process.exit(1);
          }

          let tableRows = [];
          tableRows.push([
            { data: 'Variable Name', header: true },
            { data: 'Scheduled Time', header: true },
            { data: 'Chart Name', header: true },
            { data: 'Version', header: true },
            { data: 'Description', header: true }
          ]);

          for (const key of Object.keys(variables)) {
            if (!key.startsWith('_SCHEDULE_')) continue;

            console.log(key.split('_').pop());
            
            const time = new Date(parseInt(key.split('_').pop()));

            const value = variables[key];
            const commaIndex = value.indexOf(',');
            if (commaIndex === -1) {
              console.log(`No comma found for ${key}, skipping`);
              continue;
            }

            let jsonStr = value.substring(commaIndex + 1).trim();

            let data;
            try {
              data = JSON.parse(jsonStr);
              if (typeof data === 'string') {
                data = JSON.parse(data);
              }
            } catch (err) {
              console.log(`Failed to parse JSON for ${key}: ${err}`);
              continue;
            }

            const chartName = data.chart_name || '';
            const version = data.version || data.chart_version || '';
            const description = data.description || data.description || '';

            tableRows.push([
              { data: key },
              { data: time },
              { data: chartName },
              { data: version },
              { data: description }
            ]);
          }

          await summary
            .addHeading('Deployment Summary', 2)
            .addTable(tableRows)
            .write();
