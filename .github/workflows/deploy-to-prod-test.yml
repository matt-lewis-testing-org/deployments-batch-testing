name: Deploy to Prod Cluster - Scheduled

on:
  schedule:
    # This MUST be in sync with the DEPLOYMENT_TIME below (and is in UTC)
    # Set to 5 mins past the hour to avoid the hourly crush
    - cron: '5 15 * * 3'
  workflow_dispatch:
    inputs:
      cluster:
        type: choice
        description: 'Cluster to deploy to'
        required: true
        options:
          - scprodeu-eu-central-1
          - scprodjp-ap-northeast-1
      chart_name:
        type: choice
        description: 'the name of the helm chart to deploy'
        required: true
        options:
# service options
          - agent-auth
          - agent-auth-functional-test
      chart_version:
        description: |
          The helm chart version number to deploy in git describe X.Y.Z-0-gabcdefa format.
          Value can be found in the annotation of your Github Actions Workflow run.
        required: true
      values_filename:
        description: 'Custom values chart'
        default: 'values.yaml'
      description:
        type: string
        description: |
          A short description of the change being deployed. This will be shared with our
          partners.
        required: true

jobs:
  check-po-deploy:
    runs-on: ubuntu-latest
    steps:
      - run: echo "check PO deploy executed"

  deploy:
    name: Schedule deployment
    needs: check-po-deploy
    runs-on: ubuntu-latest
    env:
      FREEZE_TIME: '10pm UTC Monday'
      DEPLOYMENT_TIME: '3pm UTC Wednesday'
    steps:
      - name: calculate date
        id: date
        # date will output the next occurrence of the time, so the logic
        # is if the freeze time is greater than the deployment time, we're
        # in the Freeze period, so we need to target the deployment time in
        # 1 week.
        run: |
          freeze_secs="$(date +%s --date "$FREEZE_TIME")"
          deploy_secs="$(date +%s --date "$DEPLOYMENT_TIME")"
          if [[ "$freeze_secs" -gt "$deploy_secs" ]]; then
            date="$(date --date "$DEPLOYMENT_TIME + 1 week")"
          else
            date="$(date --date "$DEPLOYMENT_TIME")"
          fi
          echo "Calculated deployment date: $date"
          echo "date=$date" >> "$GITHUB_OUTPUT"

      - name: Get deployment action scheduler token from github app
        id: github-app
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.SCHEDULE_APP_ID }}
          private-key: ${{ secrets.SCHEDULE_APP_KEY }}
          owner: ${{ github.repository_owner }}

      - uses: austenstone/schedule@v1.3
        with:
          github-token: ${{ steps.github-app.outputs.token }}
          date: ${{ steps.date.outputs.date }}
          workflow: deploy-to-ccp.yml
          timezone: UTC
          inputs: |
            '{
              "cluster_name": "${{ inputs.cluster }}",
              "chart_name": "${{ inputs.chart_name }}",
              "version": "${{ inputs.chart_version }}",
              "custom_values_file": "${{ inputs.values_filename }}",
              "description": "${{ inputs.description }}",
              "slack_channel": "dscc-gha-prod-deploys",
              "int-checks-status": "true"
            }'
